AAA         void                    [       37                 ]
AAD         void                    [       d5 0a              ]
AAD         imm                     [i-:    d5 ib,u            ]
AAM         void                    [       d4 0a              ]
AAM         imm                     [i-:    d4 ib,u            ]
AAS         void                    [       3f                 ]
ADC         mem,reg8                [mr:    10 /r              ]
ADC         reg8,reg8               [mr:    10 /r              ]
ADC         mem,reg16               [mr:    o16 11 /r          ]
ADC         reg16,reg16             [mr:    o16 11 /r          ]
ADC         reg8,mem                [rm:    12 /r              ]
ADC         reg8,reg8               [rm:    12 /r              ]
ADC         reg16,mem               [rm:    o16 13 /r          ]
ADC         reg16,reg16             [rm:    o16 13 /r          ]
ADC         rm16,imm8               [mi:    o16 83 /2 ib,s     ]
ADC         reg_al,imm              [-i:    14 ib              ]
ADC         reg_ax,sbyteword        [mi:    o16 83 /2 ib,s     ]
ADC         reg_ax,imm              [-i:    o16 15 iw          ]
ADC         rm8,imm                 [mi:    80 /2 ib           ]
ADC         rm16,sbyteword          [mi:    o16 83 /2 ib,s     ]
ADC         rm16,imm                [mi:    o16 81 /2 iw       ]
ADC         mem,imm8                [mi:    80 /2 ib           ]
ADC         mem,sbyteword16         [mi:    o16 83 /2 ib,s     ]
ADC         mem,imm16               [mi:    o16 81 /2 iw       ]
ADC         rm8,imm                 [mi:    82 /2 ib           ]
ADD         mem,reg8                [mr:    00 /r              ]
ADD         reg8,reg8               [mr:    00 /r              ]
ADD         mem,reg16               [mr:    o16 01 /r          ]
ADD         reg16,reg16             [mr:    o16 01 /r          ]
ADD         reg8,mem                [rm:    02 /r              ]
ADD         reg8,reg8               [rm:    02 /r              ]
ADD         reg16,mem               [rm:    o16 03 /r          ]
ADD         reg16,reg16             [rm:    o16 03 /r          ]
ADD         rm16,imm8               [mi:    o16 83 /0 ib,s     ]
ADD         reg_al,imm              [-i:    04 ib              ]
ADD         reg_ax,sbyteword        [mi:    o16 83 /0 ib,s     ]
ADD         reg_ax,imm              [-i:    o16 05 iw          ]
ADD         rm8,imm                 [mi:    80 /0 ib           ]
ADD         rm16,sbyteword          [mi:    o16 83 /0 ib,s     ]
ADD         rm16,imm                [mi:    o16 81 /0 iw       ]
ADD         mem,imm8                [mi:    80 /0 ib           ]
ADD         mem,sbyteword16         [mi:    o16 83 /0 ib,s     ]
ADD         mem,imm16               [mi:    o16 81 /0 iw       ]
ADD         rm8,imm                 [mi:    82 /0 ib           ]
AND         mem,reg8                [mr:    20 /r              ]
AND         reg8,reg8               [mr:    20 /r              ]
AND         mem,reg16               [mr:    o16 21 /r          ]
AND         reg16,reg16             [mr:    o16 21 /r          ]
AND         reg8,mem                [rm:    22 /r              ]
AND         reg8,reg8               [rm:    22 /r              ]
AND         reg16,mem               [rm:    o16 23 /r          ]
AND         reg16,reg16             [rm:    o16 23 /r          ]
AND         rm16,imm8               [mi:    o16 83 /4 ib,s     ]
AND         reg_al,imm              [-i:    24 ib              ]
AND         reg_ax,sbyteword        [mi:    o16 83 /4 ib,s     ]
AND         reg_ax,imm              [-i:    o16 25 iw          ]
AND         rm8,imm                 [mi:    80 /4 ib           ]
AND         rm16,sbyteword          [mi:    o16 83 /4 ib,s     ]
AND         rm16,imm                [mi:    o16 81 /4 iw       ]
AND         mem,imm8                [mi:    80 /4 ib           ]
AND         mem,sbyteword16         [mi:    o16 83 /4 ib,s     ]
AND         mem,imm16               [mi:    o16 81 /4 iw       ]
AND         rm8,imm                 [mi:    82 /4 ib           ]
CALL        imm                     [i-:    odf e8 rel         ]
CALL        imm|near                [i-:    odf e8 rel         ]
CALL        imm|far                 [i-:    odf 9a iwd seg     ]
CALL        imm16                   [i-:    o16 e8 rel         ]
CALL        imm16|near              [i-:    o16 e8 rel         ]
CALL        imm16|far               [i-:    o16 9a iwd seg     ]
CALL        imm:imm                 [ji:    odf 9a iwd iw      ]
CALL        imm16:imm               [ji:    o16 9a iw iw       ]
CALL        imm:imm16               [ji:    o16 9a iw iw       ]
CALL        mem|far                 [m-:    odf ff /3          ]
CALL        mem16|far               [m-:    o16 ff /3          ]
CALL        mem|near                [m-:    odf ff /2          ]
CALL        rm16|near               [m-:    o16 ff /2          ]
CALL        mem                     [m-:    odf ff /2          ]
CALL        rm16                    [m-:    o16 ff /2          ]
CBW         void                    [       o16 98             ]
CLC         void                    [       f8                 ]
CLD         void                    [       fc                 ]
CLI         void                    [       fa                 ]
CMC         void                    [       f5                 ]
CMP         mem,reg8                [mr:    38 /r              ]
CMP         reg8,reg8               [mr:    38 /r              ]
CMP         mem,reg16               [mr:    o16 39 /r          ]
CMP         reg16,reg16             [mr:    o16 39 /r          ]
CMP         reg8,mem                [rm:    3a /r              ]
CMP         reg8,reg8               [rm:    3a /r              ]
CMP         reg16,mem               [rm:    o16 3b /r          ]
CMP         reg16,reg16             [rm:    o16 3b /r          ]
CMP         rm16,imm8               [mi:    o16 83 /7 ib,s     ]
CMP         reg_al,imm              [-i:    3c ib              ]
CMP         reg_ax,sbyteword        [mi:    o16 83 /7 ib,s     ]
CMP         reg_ax,imm              [-i:    o16 3d iw          ]
CMP         rm8,imm                 [mi:    80 /7 ib           ]
CMP         rm16,sbyteword          [mi:    o16 83 /7 ib,s     ]
CMP         rm16,imm                [mi:    o16 81 /7 iw       ]
CMP         mem,imm8                [mi:    80 /7 ib           ]
CMP         mem,sbyteword16         [mi:    o16 83 /7 ib,s     ]
CMP         mem,imm16               [mi:    o16 81 /7 iw       ]
CMP         rm8,imm                 [mi:    82 /7 ib           ]
CMPSB       void                    [       repe a6            ]
CMPSW       void                    [       repe o16 a7        ]
CWD         void                    [       o16 99             ]
DAA         void                    [       27                 ]
DAS         void                    [       2f                 ]
DEC         reg16                   [r-:    o16 48+r           ]
DEC         rm8                     [m-:    fe /1              ]
DEC         rm16                    [m-:    o16 ff /1          ]
DIV         rm8                     [m-:    f6 /6              ]
DIV         rm16                    [m-:    o16 f7 /6          ]
F2XM1       void                    [       d9 f0              ]
FABS        void                    [       d9 e1              ]
FADD        mem32                   [m-:    d8 /0              ]
FADD        mem64                   [m-:    dc /0              ]
FADD        fpureg|to               [r-:    dc c0+r            ]
FADD        fpureg                  [r-:    d8 c0+r            ]
FADD        fpureg,fpu0             [r-:    dc c0+r            ]
FADD        fpu0,fpureg             [-r:    d8 c0+r            ]
FADD        void                    [       de c1              ]
FADDP       fpureg                  [r-:    de c0+r            ]
FADDP       fpureg,fpu0             [r-:    de c0+r            ]
FADDP       void                    [       de c1              ]
FBLD        mem80                   [m-:    df /4              ]
FBLD        mem                     [m-:    df /4              ]
FBSTP       mem80                   [m-:    df /6              ]
FBSTP       mem                     [m-:    df /6              ]
FCHS        void                    [       d9 e0              ]
FCLEX       void                    [       wait db e2         ]
FCOM        mem32                   [m-:    d8 /2              ]
FCOM        mem64                   [m-:    dc /2              ]
FCOM        fpureg                  [r-:    d8 d0+r            ]
FCOM        fpu0,fpureg             [-r:    d8 d0+r            ]
FCOM        void                    [       d8 d1              ]
FCOMP       mem32                   [m-:    d8 /3              ]
FCOMP       mem64                   [m-:    dc /3              ]
FCOMP       fpureg                  [r-:    d8 d8+r            ]
FCOMP       fpu0,fpureg             [-r:    d8 d8+r            ]
FCOMP       void                    [       d8 d9              ]
FCOMPP      void                    [       de d9              ]
FDECSTP     void                    [       d9 f6              ]
FDISI       void                    [       wait db e1         ]
FDIV        mem32                   [m-:    d8 /6              ]
FDIV        mem64                   [m-:    dc /6              ]
FDIV        fpureg|to               [r-:    dc f8+r            ]
FDIV        fpureg                  [r-:    d8 f0+r            ]
FDIV        fpureg,fpu0             [r-:    dc f8+r            ]
FDIV        fpu0,fpureg             [-r:    d8 f0+r            ]
FDIV        void                    [       de f9              ]
FDIVP       fpureg                  [r-:    de f8+r            ]
FDIVP       fpureg,fpu0             [r-:    de f8+r            ]
FDIVP       void                    [       de f9              ]
FDIVR       mem32                   [m-:    d8 /7              ]
FDIVR       mem64                   [m-:    dc /7              ]
FDIVR       fpureg|to               [r-:    dc f0+r            ]
FDIVR       fpureg,fpu0             [r-:    dc f0+r            ]
FDIVR       fpureg                  [r-:    d8 f8+r            ]
FDIVR       fpu0,fpureg             [-r:    d8 f8+r            ]
FDIVR       void                    [       de f1              ]
FDIVRP      fpureg                  [r-:    de f0+r            ]
FDIVRP      fpureg,fpu0             [r-:    de f0+r            ]
FDIVRP      void                    [       de f1              ]
FENI        void                    [       wait db e0         ]
FFREE       fpureg                  [r-:    dd c0+r            ]
FFREE       void                    [       dd c1              ]
FIADD       mem32                   [m-:    da /0              ]
FIADD       mem16                   [m-:    de /0              ]
FICOM       mem32                   [m-:    da /2              ]
FICOM       mem16                   [m-:    de /2              ]
FICOMP      mem32                   [m-:    da /3              ]
FICOMP      mem16                   [m-:    de /3              ]
FIDIV       mem32                   [m-:    da /6              ]
FIDIV       mem16                   [m-:    de /6              ]
FIDIVR      mem32                   [m-:    da /7              ]
FIDIVR      mem16                   [m-:    de /7              ]
FILD        mem32                   [m-:    db /0              ]
FILD        mem16                   [m-:    df /0              ]
FILD        mem64                   [m-:    df /5              ]
FIMUL       mem32                   [m-:    da /1              ]
FIMUL       mem16                   [m-:    de /1              ]
FINCSTP     void                    [       d9 f7              ]
FINIT       void                    [       wait db e3         ]
FIST        mem32                   [m-:    db /2              ]
FIST        mem16                   [m-:    df /2              ]
FISTP       mem32                   [m-:    db /3              ]
FISTP       mem16                   [m-:    df /3              ]
FISTP       mem64                   [m-:    df /7              ]
FISUB       mem32                   [m-:    da /4              ]
FISUB       mem16                   [m-:    de /4              ]
FISUBR      mem32                   [m-:    da /5              ]
FISUBR      mem16                   [m-:    de /5              ]
FLD         mem32                   [m-:    d9 /0              ]
FLD         mem64                   [m-:    dd /0              ]
FLD         mem80                   [m-:    db /5              ]
FLD         fpureg                  [r-:    d9 c0+r            ]
FLD         void                    [       d9 c1              ]
FLD1        void                    [       d9 e8              ]
FLDCW       mem                     [m-:    d9 /5              ]
FLDENV      mem                     [m-:    d9 /4              ]
FLDL2E      void                    [       d9 ea              ]
FLDL2T      void                    [       d9 e9              ]
FLDLG2      void                    [       d9 ec              ]
FLDLN2      void                    [       d9 ed              ]
FLDPI       void                    [       d9 eb              ]
FLDZ        void                    [       d9 ee              ]
FMUL        mem32                   [m-:    d8 /1              ]
FMUL        mem64                   [m-:    dc /1              ]
FMUL        fpureg|to               [r-:    dc c8+r            ]
FMUL        fpureg,fpu0             [r-:    dc c8+r            ]
FMUL        fpureg                  [r-:    d8 c8+r            ]
FMUL        fpu0,fpureg             [-r:    d8 c8+r            ]
FMUL        void                    [       de c9              ]
FMULP       fpureg                  [r-:    de c8+r            ]
FMULP       fpureg,fpu0             [r-:    de c8+r            ]
FMULP       void                    [       de c9              ]
FNCLEX      void                    [       db e2              ]
FNDISI      void                    [       db e1              ]
FNENI       void                    [       db e0              ]
FNINIT      void                    [       db e3              ]
FNOP        void                    [       d9 d0              ]
FNSAVE      mem                     [m-:    dd /6              ]
FNSTCW      mem                     [m-:    d9 /7              ]
FNSTENV     mem                     [m-:    d9 /6              ]
FNSTSW      mem                     [m-:    dd /7              ]
FPATAN      void                    [       d9 f3              ]
FPREM       void                    [       d9 f8              ]
FPTAN       void                    [       d9 f2              ]
FRNDINT     void                    [       d9 fc              ]
FRSTOR      mem                     [m-:    dd /4              ]
FSAVE       mem                     [m-:    wait dd /6         ]
FSCALE      void                    [       d9 fd              ]
FSQRT       void                    [       d9 fa              ]
FST         mem32                   [m-:    d9 /2              ]
FST         mem64                   [m-:    dd /2              ]
FST         fpureg                  [r-:    dd d0+r            ]
FST         void                    [       dd d1              ]
FSTCW       mem                     [m-:    wait d9 /7         ]
FSTENV      mem                     [m-:    wait d9 /6         ]
FSTP        mem32                   [m-:    d9 /3              ]
FSTP        mem64                   [m-:    dd /3              ]
FSTP        mem80                   [m-:    db /7              ]
FSTP        fpureg                  [r-:    dd d8+r            ]
FSTP        void                    [       dd d9              ]
FSTSW       mem                     [m-:    wait dd /7         ]
FSUB        mem32                   [m-:    d8 /4              ]
FSUB        mem64                   [m-:    dc /4              ]
FSUB        fpureg|to               [r-:    dc e8+r            ]
FSUB        fpureg,fpu0             [r-:    dc e8+r            ]
FSUB        fpureg                  [r-:    d8 e0+r            ]
FSUB        fpu0,fpureg             [-r:    d8 e0+r            ]
FSUB        void                    [       de e9              ]
FSUBP       fpureg                  [r-:    de e8+r            ]
FSUBP       fpureg,fpu0             [r-:    de e8+r            ]
FSUBP       void                    [       de e9              ]
FSUBR       mem32                   [m-:    d8 /5              ]
FSUBR       mem64                   [m-:    dc /5              ]
FSUBR       fpureg|to               [r-:    dc e0+r            ]
FSUBR       fpureg,fpu0             [r-:    dc e0+r            ]
FSUBR       fpureg                  [r-:    d8 e8+r            ]
FSUBR       fpu0,fpureg             [-r:    d8 e8+r            ]
FSUBR       void                    [       de e1              ]
FSUBRP      fpureg                  [r-:    de e0+r            ]
FSUBRP      fpureg,fpu0             [r-:    de e0+r            ]
FSUBRP      void                    [       de e1              ]
FTST        void                    [       d9 e4              ]
FXAM        void                    [       d9 e5              ]
FXCH        fpureg                  [r-:    d9 c8+r            ]
FXCH        fpureg,fpu0             [r-:    d9 c8+r            ]
FXCH        fpu0,fpureg             [-r:    d9 c8+r            ]
FXCH        void                    [       d9 c9              ]
FXTRACT     void                    [       d9 f4              ]
FYL2X       void                    [       d9 f1              ]
FYL2XP1     void                    [       d9 f9              ]
HLT         void                    [       f4                 ]
IDIV        rm8                     [m-:    f6 /7              ]
IDIV        rm16                    [m-:    o16 f7 /7          ]
IMUL        rm8                     [m-:    f6 /5              ]
IMUL        rm16                    [m-:    o16 f7 /5          ]
IN          reg_al,imm              [-i:    e4 ib,u            ]
IN          reg_ax,imm              [-i:    o16 e5 ib,u        ]
IN          reg_al,reg_dx           [--:    ec                 ]
IN          reg_ax,reg_dx           [--:    o16 ed             ]
INC         reg16                   [r-:    o16 40+r           ]
INC         rm8                     [m-:    fe /0              ]
INC         rm16                    [m-:    o16 ff /0          ]
INT         imm                     [i-:    cd ib,u            ]
INT03       void                    [       cc                 ]
INT3        void                    [       cc                 ]
INTO        void                    [       ce                 ]
IRET        void                    [       odf cf             ]
IRETW       void                    [       o16 cf             ]
JCXZ        imm                     [i-:    a16 e3 rel8        ]
JMP         imm|short               [i-:    eb rel8            ]
JMP         imm                     [i-:    jmp8 eb rel8       ]
JMP         imm                     [i-:    odf e9 rel         ]
JMP         imm|near                [i-:    odf e9 rel         ]
JMP         imm|far                 [i-:    odf ea iwd seg     ]
JMP         imm16                   [i-:    o16 e9 rel         ]
JMP         imm16|near              [i-:    o16 e9 rel         ]
JMP         imm16|far               [i-:    o16 ea iwd seg     ]
JMP         imm:    imm                [ji: odf ea iwd iw      ]
JMP         imm16:  imm              [ji:   o16 ea iw iw       ]
JMP         imm:    imm16              [ji: o16 ea iw iw       ]
JMP         mem|far                 [m-:    odf ff /5          ]
JMP         mem16|far               [m-:    o16 ff /5          ]
JMP         mem|near                [m-:    odf ff /4          ]
JMP         rm16|near               [m-:    o16 ff /4          ]
JMP         mem                     [m-:    odf ff /4          ]
JMP         rm16                    [m-:    o16 ff /4          ]
LAHF        void                    [       9f                 ]
LDS         reg16,mem               [rm:    o16 c5 /r          ]
LEA         reg16,mem               [rm:    o16 8d /r          ]
LEA         reg16,imm               [rm:    o16 8d /r          ]
LES         reg16,mem               [rm:    o16 c4 /r          ]
LODSB       void                    [       ac                 ]
LODSW       void                    [       o16 ad             ]
LOOP        imm                     [i-:    adf e2 rel8        ]
LOOP        imm,reg_cx              [i-:    a16 e2 rel8        ]
LOOPE       imm                     [i-:    adf e1 rel8        ]
LOOPE       imm,reg_cx              [i-:    a16 e1 rel8        ]
LOOPNE      imm                     [i-:    adf e0 rel8        ]
LOOPNE      imm,reg_cx              [i-:    a16 e0 rel8        ]
LOOPNZ      imm                     [i-:    adf e0 rel8        ]
LOOPNZ      imm,reg_cx              [i-:    a16 e0 rel8        ]
LOOPZ       imm                     [i-:    adf e1 rel8        ]
LOOPZ       imm,reg_cx              [i-:    a16 e1 rel8        ]
MOV         mem,reg_sreg            [mr:    8c /r              ]
MOV         reg16,reg_sreg          [mr:    o16 8c /r          ]
MOV         reg_sreg,mem            [rm:    8e /r              ]
MOV         reg_sreg,reg16          [rm:    8e /r              ]
MOV         reg_sreg,reg16          [rm:    o16 8e /r          ]
MOV         reg_al,mem_offs         [-i:    a0 iwdq            ]
MOV         reg_ax,mem_offs         [-i:    o16 a1 iwdq        ]
MOV         mem_offs,reg_al         [i-:    a2 iwdq            ]
MOV         mem_offs,reg_ax         [i-:    o16 a3 iwdq        ]
MOV         mem,reg8                [mr:    88 /r              ]
MOV         reg8,reg8               [mr:    88 /r              ]
MOV         mem,reg16               [mr:    o16 89 /r          ]
MOV         reg16,reg16             [mr:    o16 89 /r          ]
MOV         reg8,mem                [rm:    8a /r              ]
MOV         reg8,reg8               [rm:    8a /r              ]
MOV         reg16,mem               [rm:    o16 8b /r          ]
MOV         reg16,reg16             [rm:    o16 8b /r          ]
MOV         reg8,imm                [ri:    b0+r ib            ]
MOV         reg16,imm               [ri:    o16 b8+r iw        ]
MOV         rm8,imm                 [mi:    c6 /0 ib           ]
MOV         rm16,imm                [mi:    o16 c7 /0 iw       ]
MOV         mem,imm8                [mi:    c6 /0 ib           ]
MOV         mem,imm16               [mi:    o16 c7 /0 iw       ]
MOVSB       void                    [       a4                 ]
MOVSW       void                    [       o16 a5             ]
MUL         rm8                     [m-:    f6 /4              ]
MUL         rm16                    [m-:    o16 f7 /4          ]
NEG         rm8                     [m-:    f6 /3              ]
NEG         rm16                    [m-:    o16 f7 /3          ]
NOP         void                    [       90                 ]
NOT         rm8                     [m-:    f6 /2              ]
NOT         rm16                    [m-:    o16 f7 /2          ]
OR          mem,reg8                [mr:    08 /r              ]
OR          reg8,reg8               [mr:    08 /r              ]
OR          mem,reg16               [mr:    o16 09 /r          ]
OR          reg16,reg16             [mr:    o16 09 /r          ]
OR          reg8,mem                [rm:    0a /r              ]
OR          reg8,reg8               [rm:    0a /r              ]
OR          reg16,mem               [rm:    o16 0b /r          ]
OR          reg16,reg16             [rm:    o16 0b /r          ]
OR          rm16,imm8               [mi:    o16 83 /1 ib,s     ]
OR          reg_al,imm              [-i:    0c ib              ]
OR          reg_ax,sbyteword        [mi:    o16 83 /1 ib,s     ]
OR          reg_ax,imm              [-i:    o16 0d iw          ]
OR          rm8,imm                 [mi:    80 /1 ib           ]
OR          rm16,sbyteword          [mi:    o16 83 /1 ib,s     ]
OR          rm16,imm                [mi:    o16 81 /1 iw       ]
OR          mem,imm8                [mi:    80 /1 ib           ]
OR          mem,sbyteword16         [mi:    o16 83 /1 ib,s     ]
OR          mem,imm16               [mi:    o16 81 /1 iw       ]
OR          rm8,imm                 [mi:    82 /1 ib           ]
OUT         imm,reg_al              [i-:    e6 ib,u            ]
OUT         imm,reg_ax              [i-:    o16 e7 ib,u        ]
OUT         reg_dx,reg_al           [--:    ee                 ]
OUT         reg_dx,reg_ax           [--:    o16 ef             ]
PAUSE       void                    [       f3i 90             ]
POP         reg16                   [r-:    o16 58+r           ]
POP         rm16                    [m-:    o16 8f /0          ]
POP         reg_es                  [--:    07                 ]
POP         reg_cs                  [--:    0f                 ]
POP         reg_ss                  [--:    17                 ]
POP         reg_ds                  [--:    1f                 ]
POPF        void                    [       odf 9d             ]
POPFW       void                    [       o16 9d             ]
PUSH        reg16                   [r-:    o16 50+r           ]
PUSH        rm16                    [m-:    o16 ff /6          ]
PUSH        reg_es                  [--:    06                 ]
PUSH        reg_cs                  [--:    0e                 ]
PUSH        reg_ss                  [--:    16                 ]
PUSH        reg_ds                  [--:    1e                 ]
PUSHF       void                    [       odf 9c             ]
PUSHFW      void                    [       o16 9c             ]
RCL         rm8,unity               [m-:    d0 /2              ]
RCL         rm8,reg_cl              [m-:    d2 /2              ]
RCL         rm16,unity              [m-:    o16 d1 /2          ]
RCL         rm16,reg_cl             [m-:    o16 d3 /2          ]
RCR         rm8,unity               [m-:    d0 /3              ]
RCR         rm8,reg_cl              [m-:    d2 /3              ]
RCR         rm16,unity              [m-:    o16 d1 /3          ]
RCR         rm16,reg_cl             [m-:    o16 d3 /3          ]
RET         void                    [       c3                 ]
RET         imm                     [i-:    c2 iw              ]
RETF        void                    [       cb                 ]
RETF        imm                     [i-:    ca iw              ]
RETN        void                    [       c3                 ]
RETN        imm                     [i-:    c2 iw              ]
RETW        void                    [       o16 c3             ]
RETW        imm                     [i-:    c2 iw              ]
RETFW       void                    [       o16 cb             ]
RETFW       imm                     [i-:    o16 ca iw          ]
RETNW       void                    [       o16 c3             ]
RETNW       imm                     [i-:    o16 c2 iw          ]
ROL         rm8,unity               [m-:    d0 /0              ]
ROL         rm8,reg_cl              [m-:    d2 /0              ]
ROL         rm16,unity              [m-:    o16 d1 /0          ]
ROL         rm16,reg_cl             [m-:    o16 d3 /0          ]
ROR         rm8,unity               [m-:    d0 /1              ]
ROR         rm8,reg_cl              [m-:    d2 /1              ]
ROR         rm16,unity              [m-:    o16 d1 /1          ]
ROR         rm16,reg_cl             [m-:    o16 d3 /1          ]
SAHF        void                    [       9e                 ]
SAL         rm8,unity               [m-:    d0 /4              ]
SAL         rm8,reg_cl              [m-:    d2 /4              ]
SAL         rm16,unity              [m-:    o16 d1 /4          ]
SAL         rm16,reg_cl             [m-:    o16 d3 /4          ]
SALC        void                    [       d6                 ]
SAR         rm8,unity               [m-:    d0 /7              ]
SAR         rm8,reg_cl              [m-:    d2 /7              ]
SAR         rm16,unity              [m-:    o16 d1 /7          ]
SAR         rm16,reg_cl             [m-:    o16 d3 /7          ]
SBB         mem,reg8                [mr:    18 /r              ]
SBB         reg8,reg8               [mr:    18 /r              ]
SBB         mem,reg16               [mr:    o16 19 /r          ]
SBB         reg16,reg16             [mr:    o16 19 /r          ]
SBB         reg8,mem                [rm:    1a /r              ]
SBB         reg8,reg8               [rm:    1a /r              ]
SBB         reg16,mem               [rm:    o16 1b /r          ]
SBB         reg16,reg16             [rm:    o16 1b /r          ]
SBB         rm16,imm8               [mi:    o16 83 /3 ib,s     ]
SBB         reg_al,imm              [-i:    1c ib              ]
SBB         reg_ax,sbyteword        [mi:    o16 83 /3 ib,s     ]
SBB         reg_ax,imm              [-i:    o16 1d iw          ]
SBB         rm8,imm                 [mi:    80 /3 ib           ]
SBB         rm16,sbyteword          [mi:    o16 83 /3 ib,s     ]
SBB         rm16,imm                [mi:    o16 81 /3 iw       ]
SBB         mem,imm8                [mi:    80 /3 ib           ]
SBB         mem,sbyteword16         [mi:    o16 83 /3 ib,s     ]
SBB         mem,imm16               [mi:    o16 81 /3 iw       ]
SBB         rm8,imm                 [mi:    82 /3 ib           ]
SCASB       void                    [       repe ae            ]
SCASW       void                    [       repe o16 af        ]
SHL         rm8,unity               [m-:    d0 /4              ]
SHL         rm8,reg_cl              [m-:    d2 /4              ]
SHL         rm16,unity              [m-:    o16 d1 /4          ]
SHL         rm16,reg_cl             [m-:    o16 d3 /4          ]
SHR         rm8,unity               [m-:    d0 /5              ]
SHR         rm8,reg_cl              [m-:    d2 /5              ]
SHR         rm16,unity              [m-:    o16 d1 /5          ]
SHR         rm16,reg_cl             [m-:    o16 d3 /5          ]
STC         void                    [       f9                 ]
STD         void                    [       fd                 ]
STI         void                    [       fb                 ]
STOSB       void                    [       aa                 ]
STOSW       void                    [       o16 ab             ]
SUB         mem,reg8                [mr:    28 /r              ]
SUB         reg8,reg8               [mr:    28 /r              ]
SUB         mem,reg16               [mr:    o16 29 /r          ]
SUB         reg16,reg16             [mr:    o16 29 /r          ]
SUB         reg8,mem                [rm:    2a /r              ]
SUB         reg8,reg8               [rm:    2a /r              ]
SUB         reg16,mem               [rm:    o16 2b /r          ]
SUB         reg16,reg16             [rm:    o16 2b /r          ]
SUB         rm16,imm8               [mi:    o16 83 /5 ib,s     ]
SUB         reg_al,imm              [-i:    2c ib              ]
SUB         reg_ax,sbyteword        [mi:    o16 83 /5 ib,s     ]
SUB         reg_ax,imm              [-i:    o16 2d iw          ]
SUB         rm8,imm                 [mi:    80 /5 ib           ]
SUB         rm16,sbyteword          [mi:    o16 83 /5 ib,s     ]
SUB         rm16,imm                [mi:    o16 81 /5 iw       ]
SUB         mem,imm8                [mi:    80 /5 ib           ]
SUB         mem,sbyteword16         [mi:    o16 83 /5 ib,s     ]
SUB         mem,imm16               [mi:    o16 81 /5 iw       ]
SUB         rm8,imm                 [mi:    82 /5 ib           ]
TEST        mem,reg8                [mr:    84 /r              ]
TEST        reg8,reg8               [mr:    84 /r              ]
TEST        mem,reg16               [mr:    o16 85 /r          ]
TEST        reg16,reg16             [mr:    o16 85 /r          ]
TEST        reg8,mem                [rm:    84 /r              ]
TEST        reg16,mem               [rm:    o16 85 /r          ]
TEST        reg_al,imm              [-i:    a8 ib              ]
TEST        reg_ax,imm              [-i:    o16 a9 iw          ]
TEST        rm8,imm                 [mi:    f6 /0 ib           ]
TEST        rm16,imm                [mi:    o16 f7 /0 iw       ]
TEST        mem,imm8                [mi:    f6 /0 ib           ]
TEST        mem,imm16               [mi:    o16 f7 /0 iw       ]
FWAIT       void                    [       wait               ]
XCHG        reg_ax,reg16            [-r:    o16 90+r           ]
XCHG        reg16,reg_ax            [r-:    o16 90+r           ]
XCHG        reg8,mem                [rm:    hlenl 86 /r        ]
XCHG        reg8,reg8               [rm:    86 /r              ]
XCHG        reg16,mem               [rm:    hlenl o16 87 /r    ]
XCHG        reg16,reg16             [rm:    o16 87 /r          ]
XCHG        mem,reg8                [mr:    hlenl 86 /r        ]
XCHG        reg8,reg8               [mr:    86 /r              ]
XCHG        mem,reg16               [mr:    hlenl o16 87 /r    ]
XCHG        reg16,reg16             [mr:    o16 87 /r          ]
XLATB       void                    [       d7                 ]
XLAT        void                    [       d7                 ]
XOR         mem,reg8                [mr:    30 /r              ]
XOR         reg8,reg8               [mr:    30 /r              ]
XOR         mem,reg16               [mr:    o16 31 /r          ]
XOR         reg16,reg16             [mr:    o16 31 /r          ]
XOR         reg8,mem                [rm:    32 /r              ]
XOR         reg8,reg8               [rm:    32 /r              ]
XOR         reg16,mem               [rm:    o16 33 /r          ]
XOR         reg16,reg16             [rm:    o16 33 /r          ]
XOR         rm16,imm8               [mi:    o16 83 /6 ib,s     ]
XOR         reg_al,imm              [-i:    34 ib              ]
XOR         reg_ax,sbyteword        [mi:    o16 83 /6 ib,s     ]
XOR         reg_ax,imm              [-i:    o16 35 iw          ]
XOR         rm8,imm                 [mi:    80 /6 ib           ]
XOR         rm16,sbyteword          [mi:    o16 83 /6 ib,s     ]
XOR         rm16,imm                [mi:    o16 81 /6 iw       ]
XOR         mem,imm8                [mi:    80 /6 ib           ]
XOR         mem,sbyteword16         [mi:    o16 83 /6 ib,s     ]
XOR         mem,imm16               [mi:    o16 81 /6 iw       ]
XOR         rm8,imm                 [mi:    82 /6 ib           ]
Jcc         imm|short               [i-:    70+c rel8          ]
Jcc         imm                     [i-:    jcc8 70+c rel8     ]
Jcc         imm                     [i-:    71+c jlen e9 rel   ]
Jcc         imm                     [i-:    70+c rel8          ]
